pipeline {
    agent any

    tools {nodejs "NodeJS 14.17.0"}

    // make sure the same job does not run at the same time
    options {
        disableConcurrentBuilds()
    }

    // check every 30 minutes for changes in GitHub
    triggers { 
        pollSCM('H/30 * * * *') 
    }

    parameters {
        string(name: 'DEPLOYMENT_PATH', defaultValue: '\\\\PAC-APP-1\\Applications\\revenues-app')
        booleanParam(name: 'dependenciesHaveChanged', defaultValue: false, description: 'manually set this param to true when dependencies have changes (otherwise node_modules will not be deployed)<br />not ideal, but it takes several minutes to copy the node_modules folder and most of the commit will not contain dependencies changes')
    }
    stages {
        stage('Git clone') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[credentialsId: 'github-with-token-as-password', url: 'https://github.com/jfix/revenues-app']]])
            }
        }
        stage('Install dependencies') {
            steps {
                bat 'npm install'
            }
        }
        stage('Build application') {
            steps {
                bat '''
                    set NODE_ENV=production
                    set REVENUES_API_URL=http://pac-app-1.main.oecd.org:8084/revenues
                    npm run build
                '''
            }
        }
        stage('Update index.html with Jenkins build number') {
            steps {
                contentReplace( 
                    configs: [ 
                        fileContentReplaceConfig( 
                            configs: [ fileContentReplaceItemConfig( 
                                search: '__BUILD__', 
                                replace: '${BUILD_ID}', 
                                matchCount: 1) 
                            ], 
                            fileEncoding: 'UTF-8', 
                            filePath: 'public/index.html') ])
            }
        }
        stage('Deploy') {
            steps {
                // IMPORTANT: each robocopy MUST be in its own bat because it can return exit code 1 (which is ok but would make the step fail)
                // so  "^ & IF %ERRORLEVEL% LEQ 1 exit 0" is added after the command but it would exit the bat (without executing the rest of the bat)
                bat 'robocopy .\\public %DEPLOYMENT_PATH% /mt /z /e /ns /np /nc /nfl /ndl /r:5 /purge ^ & IF %ERRORLEVEL% LEQ 1 exit 0'        
            }
        }
    }
}
